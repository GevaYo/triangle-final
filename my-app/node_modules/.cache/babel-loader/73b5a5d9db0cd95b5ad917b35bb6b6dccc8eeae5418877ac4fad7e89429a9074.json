{"ast":null,"code":"var _jsxFileName = \"/Users/danatorgovitsky/Desktop/Project/Triangle/my-app/src/pages/Pareto_analysis/ParetoForm .js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const ParetoForm = ({ setResults, setQueryParams }) => {\n//     const [startDate, setStartDate] = useState('');\n//     const [endDate, setEndDate] = useState('');\n//     const [criterion, setCriterion] = useState('total_sales');\n//     const [percentage, setPercentage] = useState(80);\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         setQueryParams({ start_date: startDate, end_date: endDate, criterion, percentage });\n//         try {\n//             const response = await axios.get('http://localhost:3001/pareto/analysis', {\n//                 params: { start_date: startDate, end_date: endDate, criterion, percentage }\n//             });\n//             setResults(response.data);\n//         } catch (error) {\n//             console.error('Error fetching Pareto analysis:', error);\n//         }\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <div>\n//                 <label>Start Date:</label>\n//                 <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} required />\n//             </div>\n//             <div>\n//                 <label>End Date:</label>\n//                 <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} required />\n//             </div>\n//             <div>\n//                 <label>Criterion:</label>\n//                 <select value={criterion} onChange={(e) => setCriterion(e.target.value)}>\n//                     <option value=\"total_sales\">Total Sales</option>\n//                     <option value=\"total_quantity\">Total Quantity</option>\n//                 </select>\n//             </div>\n//             <div>\n//                 <label>Percentage:</label>\n//                 <input type=\"number\" value={percentage} onChange={(e) => setPercentage(e.target.value)} required />\n//             </div>\n//             <button type=\"submit\">Analyze</button>\n//         </form>\n//     );\n// };\n\n// export default ParetoForm;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParetoForm = ({\n  setResults,\n  setQueryParams\n}) => {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [criterion, setCriterion] = useState('total_sales');\n  const [percentage, setPercentage] = useState(80);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setQueryParams({\n      start_date: startDate,\n      end_date: endDate,\n      criterion,\n      percentage\n    });\n    try {\n      const response = await axios.get('http://localhost:3001/pareto/analysis', {\n        params: {\n          start_date: startDate,\n          end_date: endDate,\n          criterion,\n          percentage\n        }\n      });\n      console.log(\"Pareto Analysis Response:\", response.data); // Add this log\n      setResults(response.data);\n    } catch (error) {\n      console.error('Error fetching Pareto analysis:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Criterion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: criterion,\n        onChange: e => setCriterion(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"total_sales\",\n          children: \"Total Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"total_quantity\",\n          children: \"Total Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Percentage:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: percentage,\n        onChange: e => setPercentage(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(ParetoForm, \"EP4qtpJZZHA4ffurNfAoO4jtMIg=\");\n_c = ParetoForm;\nexport default ParetoForm;\nvar _c;\n$RefreshReg$(_c, \"ParetoForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ParetoForm","setResults","setQueryParams","_s","startDate","setStartDate","endDate","setEndDate","criterion","setCriterion","percentage","setPercentage","handleSubmit","event","preventDefault","start_date","end_date","response","get","params","console","log","data","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/danatorgovitsky/Desktop/Project/Triangle/my-app/src/pages/Pareto_analysis/ParetoForm .js"],"sourcesContent":["\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const ParetoForm = ({ setResults, setQueryParams }) => {\n//     const [startDate, setStartDate] = useState('');\n//     const [endDate, setEndDate] = useState('');\n//     const [criterion, setCriterion] = useState('total_sales');\n//     const [percentage, setPercentage] = useState(80);\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         setQueryParams({ start_date: startDate, end_date: endDate, criterion, percentage });\n//         try {\n//             const response = await axios.get('http://localhost:3001/pareto/analysis', {\n//                 params: { start_date: startDate, end_date: endDate, criterion, percentage }\n//             });\n//             setResults(response.data);\n//         } catch (error) {\n//             console.error('Error fetching Pareto analysis:', error);\n//         }\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <div>\n//                 <label>Start Date:</label>\n//                 <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} required />\n//             </div>\n//             <div>\n//                 <label>End Date:</label>\n//                 <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} required />\n//             </div>\n//             <div>\n//                 <label>Criterion:</label>\n//                 <select value={criterion} onChange={(e) => setCriterion(e.target.value)}>\n//                     <option value=\"total_sales\">Total Sales</option>\n//                     <option value=\"total_quantity\">Total Quantity</option>\n//                 </select>\n//             </div>\n//             <div>\n//                 <label>Percentage:</label>\n//                 <input type=\"number\" value={percentage} onChange={(e) => setPercentage(e.target.value)} required />\n//             </div>\n//             <button type=\"submit\">Analyze</button>\n//         </form>\n//     );\n// };\n\n// export default ParetoForm;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ParetoForm = ({ setResults, setQueryParams }) => {\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [criterion, setCriterion] = useState('total_sales');\n    const [percentage, setPercentage] = useState(80);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setQueryParams({ start_date: startDate, end_date: endDate, criterion, percentage });\n        try {\n            const response = await axios.get('http://localhost:3001/pareto/analysis', {\n                params: { start_date: startDate, end_date: endDate, criterion, percentage }\n            });\n            console.log(\"Pareto Analysis Response:\", response.data);  // Add this log\n            setResults(response.data);\n        } catch (error) {\n            console.error('Error fetching Pareto analysis:', error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Start Date:</label>\n                <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} required />\n            </div>\n            <div>\n                <label>End Date:</label>\n                <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} required />\n            </div>\n            <div>\n                <label>Criterion:</label>\n                <select value={criterion} onChange={(e) => setCriterion(e.target.value)}>\n                    <option value=\"total_sales\">Total Sales</option>\n                    <option value=\"total_quantity\">Total Quantity</option>\n                </select>\n            </div>\n            <div>\n                <label>Percentage:</label>\n                <input type=\"number\" value={percentage} onChange={(e) => setPercentage(e.target.value)} required />\n            </div>\n            <button type=\"submit\">Analyze</button>\n        </form>\n    );\n};\n\nexport default ParetoForm;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}