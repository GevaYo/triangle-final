{"ast":null,"code":"// // import axios from 'axios';\n\n// // export const fetchAIEvents = async () => {\n// //   try {\n// //     const response = await axios.post('http://localhost:3001/generate-ai-events');\n// //     return response.data;\n// //   } catch (error) {\n// //     console.error('Error fetching AI events:', error);\n// //     return [];\n// //   }\n// // };\n\n// import axios from 'axios';\n\n// export const generateEvents = async (input) => {\n//   try {\n//     const response = await axios.post('http://localhost:3001/generate-ai-events', input);\n//     const data = response.data;\n//     console.log('Fetched data from backend:', data);\n\n//     // Ensure the date format is correct\n//     const events = data.map(event => ({\n//       id: event.id,\n//       title: event.summary,\n//       start: new Date(event.start.dateTime),\n//       end: new Date(event.end.dateTime),\n//       description: event.description,\n//     }));\n\n//     console.log('Formatted Events:', events);\n//     return events;\n//   } catch (error) {\n//     console.error('Error generating events:', error);\n//     return [];\n//   }\n// };\n\n//Michal New \nimport axios from 'axios';\nexport const generateEvents = async input => {\n  try {\n    console.log('Input to backend:', typeof input);\n    const response = await axios.post('http://localhost:3001/generate-ai-events', input, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    console.log('Response from backend:', response);\n    const data = response.data;\n    console.log('Fetched data from backend:', data);\n\n    // Ensure the date format is correct\n    const events = data.map(event => ({\n      id: event.id,\n      title: event.summary,\n      start: new Date(event.start.dateTime),\n      end: new Date(event.end.dateTime),\n      description: event.description\n    }));\n    console.log('Formatted Events:', events);\n    return events;\n  } catch (error) {\n    console.error('Error generating events:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","generateEvents","input","console","log","response","post","headers","data","events","map","event","id","title","summary","start","Date","dateTime","end","description","error"],"sources":["/Users/danatorgovitsky/Desktop/Project/Triangle/my-app/src/APIfiles/generateEvents.js"],"sourcesContent":["// // import axios from 'axios';\n\n// // export const fetchAIEvents = async () => {\n// //   try {\n// //     const response = await axios.post('http://localhost:3001/generate-ai-events');\n// //     return response.data;\n// //   } catch (error) {\n// //     console.error('Error fetching AI events:', error);\n// //     return [];\n// //   }\n// // };\n\n\n// import axios from 'axios';\n\n// export const generateEvents = async (input) => {\n//   try {\n//     const response = await axios.post('http://localhost:3001/generate-ai-events', input);\n//     const data = response.data;\n//     console.log('Fetched data from backend:', data);\n\n//     // Ensure the date format is correct\n//     const events = data.map(event => ({\n//       id: event.id,\n//       title: event.summary,\n//       start: new Date(event.start.dateTime),\n//       end: new Date(event.end.dateTime),\n//       description: event.description,\n//     }));\n\n//     console.log('Formatted Events:', events);\n//     return events;\n//   } catch (error) {\n//     console.error('Error generating events:', error);\n//     return [];\n//   }\n// };\n\n\n\n\n\n//Michal New \nimport axios from 'axios';\n\nexport const generateEvents = async (input) => {\n  try {\n    console.log('Input to backend:', typeof(input));\n    const response = await axios.post('http://localhost:3001/generate-ai-events', input, {headers: {'Access-Control-Allow-Origin': '*'}});\n    console.log('Response from backend:', response);\n    const data = response.data;\n    console.log('Fetched data from backend:', data);\n\n    // Ensure the date format is correct\n    const events = data.map(event => ({\n      id: event.id,\n      title: event.summary,\n      start: new Date(event.start.dateTime),\n      end: new Date(event.end.dateTime),\n      description: event.description,\n    }));\n\n    console.log('Formatted Events:', events);\n    return events;\n  } catch (error) {\n    console.error('Error generating events:', error);\n    return [];\n  }\n};\n\n\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC7C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,OAAOF,KAAM,CAAC;IAC/C,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,0CAA0C,EAAEJ,KAAK,EAAE;MAACK,OAAO,EAAE;QAAC,6BAA6B,EAAE;MAAG;IAAC,CAAC,CAAC;IACrIJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAAC;IAC/C,MAAMG,IAAI,GAAGH,QAAQ,CAACG,IAAI;IAC1BL,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEI,IAAI,CAAC;;IAE/C;IACA,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAACC,KAAK,KAAK;MAChCC,EAAE,EAAED,KAAK,CAACC,EAAE;MACZC,KAAK,EAAEF,KAAK,CAACG,OAAO;MACpBC,KAAK,EAAE,IAAIC,IAAI,CAACL,KAAK,CAACI,KAAK,CAACE,QAAQ,CAAC;MACrCC,GAAG,EAAE,IAAIF,IAAI,CAACL,KAAK,CAACO,GAAG,CAACD,QAAQ,CAAC;MACjCE,WAAW,EAAER,KAAK,CAACQ;IACrB,CAAC,CAAC,CAAC;IAEHhB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEK,MAAM,CAAC;IACxC,OAAOA,MAAM;EACf,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdjB,OAAO,CAACiB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}