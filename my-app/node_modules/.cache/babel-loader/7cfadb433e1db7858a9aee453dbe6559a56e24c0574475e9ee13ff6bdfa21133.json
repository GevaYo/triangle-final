{"ast":null,"code":"var _jsxFileName = \"/Users/danatorgovitsky/Desktop/Project/Triangle/my-app/src/pages/prediction/Prediction.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// // import LoginPage from './pages/LoginPage/LoginPage.js';\n// import prediction from './pages/prediction/Prediction.js';\n// import CatalogData from './pages/CatalogData.js';\n\n// import video from '../src/photos/video.mp4';\n\n// const App = () => {\n//   return (\n//     <Router basename=\"/Triangle\">\n//       <Routes>\n//         <Route path=\"/\" element={ <LoginPage/>} />\n//         {/* <Route path=\"/menu\" element={<PageLayout><MenuScreen /></PageLayout>} />\n//         <Route path=\"/event-calendar\" element={<PageLayout><EventCalendarPage /></PageLayout>} />\n//         <Route path=\"/club-management\" element={<PageLayout><ClubManagementPage /></PageLayout>} />\n//         <Route path=\"/sales-analysis\" element={<PageLayout><SalesAnalysis /></PageLayout>} /> */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// import React from 'react';\n// import Prediction from './prediction';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>Predict Quantities to Order</h1>\n//       <Prediction />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// const App = () => {\n//   return (\n//     <div className=\"App\">\n//           <prediction />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// echo // \n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [formData, setFormData] = useState({\n//     message: ''\n//   });\n\n//   const [response, setResponse] = useState(null);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/echo', formData, {\n//         headers: {\n//           'Content-Type': 'application/json'\n//         }\n//       });\n//       setResponse(res.data);\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Flask + React Example</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Message:\n//           <input\n//             type=\"text\"\n//             name=\"message\"\n//             value={formData.message}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Send</button>\n//       </form>\n//       <br />\n//       {response && (\n//         <div>\n//           <h2>Response:</h2>\n//           <pre>{JSON.stringify(response, null, 2)}</pre>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// // src/PredictionForm.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n\n//   const handlePredict = async () => {\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/predict', {\n//         catalog_number: catalogNumber.toString()\n//       });\n//       console.log(response.data);\n//     } catch (error) {\n//       console.error('Error predicting:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={catalogNumber}\n//         onChange={(e) => setCatalogNumber(e.target.value)}\n//       />\n//       <button onClick={handlePredict}>Predict</button>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// src/App.js - works!!!!1\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n//   const [responseData, setResponseData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   const handleInputChange = (e) => {\n//     setCatalogNumber(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/catalog_data', {\n//         catalog_number: catalogNumber\n//       });\n//       setResponseData(response.data);\n//       setError(null);\n//     } catch (err) {\n//       setError(err.response ? err.response.data.error : 'Error connecting to the server');\n//       setResponseData(null);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Catalog Data Fetcher</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Catalog Number:\n//           <input\n//             type=\"text\"\n//             value={catalogNumber}\n//             onChange={handleInputChange}\n//           />\n//         </label>\n//         <button type=\"submit\">Fetch Data</button>\n//       </form>\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n//       {responseData && (\n//         <div>\n//           <h3>Catalog Data:</h3>\n//           <ul>\n//             {responseData.map((item, index) => (\n//               <li key={index}>\n//                 <strong>Production Date:</strong> {item.production_date}, <strong>Total Before VAT:</strong> {item.total_befor_VAT}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// WORKS !!! - ONLY CATALOG NUMBER \n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n//   const [responseData, setResponseData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   const handleInputChange = (e) => {\n//     setCatalogNumber(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/predict', {\n//         catalog_number: catalogNumber\n//       });\n//       setResponseData(response.data);\n//       setError(null);\n//     } catch (err) {\n//       setError(err.response ? err.response.data.error : 'Error connecting to the server');\n//       setResponseData(null);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Predict Quantity to Order</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Catalog Number:\n//           <input\n//             type=\"text\"\n//             value={catalogNumber}\n//             onChange={handleInputChange}\n//           />\n//         </label>\n//         <button type=\"submit\">Predict</button>\n//       </form>\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n//       {responseData && (\n//         <div>\n//           <h3>Prediction Results:</h3>\n//           <ul>\n//             {responseData.map((item, index) => (\n//               <li key={index}>\n//                 <strong>Catalog Number:</strong> {item.catalog_number}, \n//                 <strong> Quantity to Order:</strong> {item.quantity_to_order}, \n//                 {/* <strong> Product Color:</strong> {item.product_color},  */}\n//                 {/* <strong> Product Size:</strong> {item.product_size} */}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// function App() {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n//   const [predictionResult, setPredictionResult] = useState([]);\n//   const [error, setError] = useState('');\n\n//   const handleCatalogNumberChange = (e) => {\n//     setCatalogNumber(e.target.value);\n//   };\n\n//   const handlePredictClick = async () => {\n//     try {\n//       console.log('Sending request with catalog number:', catalogNumber);\n//       const response = await axios.post('http://localhost:5000/predict', {\n//         catalog_number: catalogNumber\n//       });\n//       console.log('Response:', response.data);\n//       setPredictionResult(response.data);\n//       setError('');\n//     } catch (error) {\n//       console.error('Error fetching data:', error);\n//       setError('Error fetching data. Please try again later.');\n//       setPredictionResult([]);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Predict Quantities to Order</h1>\n//       <div>\n//         <label htmlFor=\"catalogNumber\">Catalog Number:</label>\n//         <input\n//           type=\"text\"\n//           id=\"catalogNumber\"\n//           value={catalogNumber}\n//           onChange={handleCatalogNumberChange}\n//         />\n//         <button onClick={handlePredictClick}>Predict</button>\n//       </div>\n\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//       <h2>Prediction Results</h2>\n//       {predictionResult.length === 0 ? (\n//         <p>No prediction results available.</p>\n//       ) : (\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>CatalogGGG Number</th>\n//             <th>Quantity to Order</th>\n//             <th>Product Color</th> \n//             <th>Product Size</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {predictionResult.map(item => (\n//             <tr key={item.catalog_number}>\n//               <td>{item.catalog_number}</td>\n//               <td>{item.quantity_to_order}</td>\n//               <td>{item.product_color}</td>\n//               <td>{item.product_size}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n//   const [responseData, setResponseData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   const handleInputChange = (e) => {\n//     setCatalogNumber(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/predict', {\n//         catalog_number: catalogNumber\n//       });\n//       setResponseData(response.data);\n//       setError(null);\n//     } catch (err) {\n//       setError(err.response ? err.response.data.error : 'Error connecting to the server');\n//       setResponseData(null);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Predict Quantity to Order</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Catalog Number:\n//           <input\n//             type=\"text\"\n//             value={catalogNumber}\n//             onChange={handleInputChange}\n//           />\n//         </label>\n//         <button type=\"submit\">Predict</button>\n//       </form>\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n//       {responseData && (\n//         <div>\n//           <h3>Prediction Results:</h3>\n//           <ul>\n//             {responseData.map((item, index) => (\n//               <li key={index}>\n//                 <strong>Catalog Number:</strong> {item.catalog_number}, \n//                 {/* <strong> Product Color:</strong> {item.product_color},  */}\n//                 {/* <strong> Product Size:</strong> {item.product_size},  */}\n//                 {/* <strong> Quantity to Order:</strong> {item.quantity_to_order} */}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport prediction_css from './Prediction.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Prediction() {\n  _s();\n  const [catalogNumber, setCatalogNumber] = useState('');\n  const [predictionResult, setPredictionResult] = useState([]);\n  const [error, setError] = useState('');\n\n  // const navigate = useNavigate();\n\n  const handleCatalogNumberChange = e => {\n    setCatalogNumber(e.target.value);\n  };\n  const handlePredictClick = async () => {\n    setPredictionResult([]);\n    setError('');\n    try {\n      console.log('Sending request with catalog number:', catalogNumber);\n      const response = await axios.post('http://localhost:5000/predict', {\n        catalog_number: catalogNumber\n      });\n      console.log('Response:', response.data);\n      setPredictionResult(response.data);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Error fetching data. Please try again later.');\n      setPredictionResult([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page_layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Predict quantities to order for next month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Predict\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"catalogNumber\",\n        children: \"Catalog Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"catalogNumber\",\n        value: catalogNumber,\n        onChange: handleCatalogNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePredictClick,\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prediction Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), predictionResult.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter catalog number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Catalog Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity to Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: predictionResult.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.catalog_number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.quantity_to_order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.product_color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.product_size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this)]\n        }, item.catalog_number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 5\n  }, this);\n}\n_s(Prediction, \"08fBdsNWrIgUcgEQ+qx4dbBX/x0=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useState","axios","prediction_css","jsxDEV","_jsxDEV","Prediction","_s","catalogNumber","setCatalogNumber","predictionResult","setPredictionResult","error","setError","handleCatalogNumberChange","e","target","value","handlePredictClick","console","log","response","post","catalog_number","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","onClick","style","color","length","map","item","quantity_to_order","product_color","product_size","_c","$RefreshReg$"],"sources":["/Users/danatorgovitsky/Desktop/Project/Triangle/my-app/src/pages/prediction/Prediction.js"],"sourcesContent":["// import React from 'react';\n// // import LoginPage from './pages/LoginPage/LoginPage.js';\n// import prediction from './pages/prediction/Prediction.js';\n// import CatalogData from './pages/CatalogData.js';\n\n// import video from '../src/photos/video.mp4';\n\n// const App = () => {\n//   return (\n//     <Router basename=\"/Triangle\">\n//       <Routes>\n//         <Route path=\"/\" element={ <LoginPage/>} />\n//         {/* <Route path=\"/menu\" element={<PageLayout><MenuScreen /></PageLayout>} />\n//         <Route path=\"/event-calendar\" element={<PageLayout><EventCalendarPage /></PageLayout>} />\n//         <Route path=\"/club-management\" element={<PageLayout><ClubManagementPage /></PageLayout>} />\n//         <Route path=\"/sales-analysis\" element={<PageLayout><SalesAnalysis /></PageLayout>} /> */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n\n// import React from 'react';\n// import Prediction from './prediction';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <h1>Predict Quantities to Order</h1>\n//       <Prediction />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// const App = () => {\n//   return (\n//     <div className=\"App\">\n//           <prediction />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n// echo // \n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [formData, setFormData] = useState({\n//     message: ''\n//   });\n\n//   const [response, setResponse] = useState(null);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await axios.post('http://localhost:5000/echo', formData, {\n//         headers: {\n//           'Content-Type': 'application/json'\n//         }\n//       });\n//       setResponse(res.data);\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Flask + React Example</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Message:\n//           <input\n//             type=\"text\"\n//             name=\"message\"\n//             value={formData.message}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Send</button>\n//       </form>\n//       <br />\n//       {response && (\n//         <div>\n//           <h2>Response:</h2>\n//           <pre>{JSON.stringify(response, null, 2)}</pre>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n// // src/PredictionForm.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n\n//   const handlePredict = async () => {\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/predict', {\n//         catalog_number: catalogNumber.toString()\n//       });\n//       console.log(response.data);\n//     } catch (error) {\n//       console.error('Error predicting:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={catalogNumber}\n//         onChange={(e) => setCatalogNumber(e.target.value)}\n//       />\n//       <button onClick={handlePredict}>Predict</button>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n// src/App.js - works!!!!1\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n//   const [responseData, setResponseData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   const handleInputChange = (e) => {\n//     setCatalogNumber(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/catalog_data', {\n//         catalog_number: catalogNumber\n//       });\n//       setResponseData(response.data);\n//       setError(null);\n//     } catch (err) {\n//       setError(err.response ? err.response.data.error : 'Error connecting to the server');\n//       setResponseData(null);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Catalog Data Fetcher</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Catalog Number:\n//           <input\n//             type=\"text\"\n//             value={catalogNumber}\n//             onChange={handleInputChange}\n//           />\n//         </label>\n//         <button type=\"submit\">Fetch Data</button>\n//       </form>\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n//       {responseData && (\n//         <div>\n//           <h3>Catalog Data:</h3>\n//           <ul>\n//             {responseData.map((item, index) => (\n//               <li key={index}>\n//                 <strong>Production Date:</strong> {item.production_date}, <strong>Total Before VAT:</strong> {item.total_befor_VAT}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n// WORKS !!! - ONLY CATALOG NUMBER \n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n//   const [responseData, setResponseData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   const handleInputChange = (e) => {\n//     setCatalogNumber(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/predict', {\n//         catalog_number: catalogNumber\n//       });\n//       setResponseData(response.data);\n//       setError(null);\n//     } catch (err) {\n//       setError(err.response ? err.response.data.error : 'Error connecting to the server');\n//       setResponseData(null);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Predict Quantity to Order</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Catalog Number:\n//           <input\n//             type=\"text\"\n//             value={catalogNumber}\n//             onChange={handleInputChange}\n//           />\n//         </label>\n//         <button type=\"submit\">Predict</button>\n//       </form>\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n//       {responseData && (\n//         <div>\n//           <h3>Prediction Results:</h3>\n//           <ul>\n//             {responseData.map((item, index) => (\n//               <li key={index}>\n//                 <strong>Catalog Number:</strong> {item.catalog_number}, \n//                 <strong> Quantity to Order:</strong> {item.quantity_to_order}, \n//                 {/* <strong> Product Color:</strong> {item.product_color},  */}\n//                 {/* <strong> Product Size:</strong> {item.product_size} */}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n// function App() {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n//   const [predictionResult, setPredictionResult] = useState([]);\n//   const [error, setError] = useState('');\n\n//   const handleCatalogNumberChange = (e) => {\n//     setCatalogNumber(e.target.value);\n//   };\n\n//   const handlePredictClick = async () => {\n//     try {\n//       console.log('Sending request with catalog number:', catalogNumber);\n//       const response = await axios.post('http://localhost:5000/predict', {\n//         catalog_number: catalogNumber\n//       });\n//       console.log('Response:', response.data);\n//       setPredictionResult(response.data);\n//       setError('');\n//     } catch (error) {\n//       console.error('Error fetching data:', error);\n//       setError('Error fetching data. Please try again later.');\n//       setPredictionResult([]);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Predict Quantities to Order</h1>\n//       <div>\n//         <label htmlFor=\"catalogNumber\">Catalog Number:</label>\n//         <input\n//           type=\"text\"\n//           id=\"catalogNumber\"\n//           value={catalogNumber}\n//           onChange={handleCatalogNumberChange}\n//         />\n//         <button onClick={handlePredictClick}>Predict</button>\n//       </div>\n\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//       <h2>Prediction Results</h2>\n//       {predictionResult.length === 0 ? (\n//         <p>No prediction results available.</p>\n//       ) : (\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>CatalogGGG Number</th>\n//             <th>Quantity to Order</th>\n//             <th>Product Color</th> \n//             <th>Product Size</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {predictionResult.map(item => (\n//             <tr key={item.catalog_number}>\n//               <td>{item.catalog_number}</td>\n//               <td>{item.quantity_to_order}</td>\n//               <td>{item.product_color}</td>\n//               <td>{item.product_size}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const App = () => {\n//   const [catalogNumber, setCatalogNumber] = useState('');\n//   const [responseData, setResponseData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   const handleInputChange = (e) => {\n//     setCatalogNumber(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('http://127.0.0.1:5000/predict', {\n//         catalog_number: catalogNumber\n//       });\n//       setResponseData(response.data);\n//       setError(null);\n//     } catch (err) {\n//       setError(err.response ? err.response.data.error : 'Error connecting to the server');\n//       setResponseData(null);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Predict Quantity to Order</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Catalog Number:\n//           <input\n//             type=\"text\"\n//             value={catalogNumber}\n//             onChange={handleInputChange}\n//           />\n//         </label>\n//         <button type=\"submit\">Predict</button>\n//       </form>\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n//       {responseData && (\n//         <div>\n//           <h3>Prediction Results:</h3>\n//           <ul>\n//             {responseData.map((item, index) => (\n//               <li key={index}>\n//                 <strong>Catalog Number:</strong> {item.catalog_number}, \n//                 {/* <strong> Product Color:</strong> {item.product_color},  */}\n//                 {/* <strong> Product Size:</strong> {item.product_size},  */}\n//                 {/* <strong> Quantity to Order:</strong> {item.quantity_to_order} */}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport prediction_css from './Prediction.css';\n\n\nfunction Prediction() {\n  const [catalogNumber, setCatalogNumber] = useState('');\n  const [predictionResult, setPredictionResult] = useState([]);\n  const [error, setError] = useState('');\n\n  // const navigate = useNavigate();\n\n  const handleCatalogNumberChange = (e) => {\n    setCatalogNumber(e.target.value);\n  };\n  \n\n  const handlePredictClick = async () => {\n    setPredictionResult([])\n    setError('');\n    try {\n      console.log('Sending request with catalog number:', catalogNumber);\n      const response = await axios.post('http://localhost:5000/predict', {\n        catalog_number: catalogNumber\n      });\n      console.log('Response:', response.data);\n      setPredictionResult(response.data);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Error fetching data. Please try again later.');\n      setPredictionResult([]);\n    }\n};\n\n  return (\n    <div className=\"page_layout\">\n      {/* <div className=\"back-button\" onClick={handleBackClick}>\n                &lt; Back\n      </div> */}\n      <h2>Predict quantities to order for next month</h2>\n      <div className='Predict'>\n        <label htmlFor=\"catalogNumber\">Catalog Number:</label>\n        <input\n          type=\"text\"\n          id=\"catalogNumber\"\n          value={catalogNumber}\n          onChange={handleCatalogNumberChange}\n        />\n        <button onClick={handlePredictClick}>Predict</button>\n      </div>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      <h2>Prediction Results</h2>\n      {predictionResult.length === 0 ? (\n        <p>Please enter catalog number</p>\n      ) : (\n      <table>\n        <thead>\n          <tr>\n            <th>Catalog Number</th>\n            {/* <th>Product Name</th> */}\n            <th>Quantity to Order</th>\n            <th>Product Color</th>\n            <th>Product Size</th>\n          </tr>\n        </thead>\n        <tbody>\n          {predictionResult.map(item => (\n            <tr key={item.catalog_number}>\n              <td>{item.catalog_number}</td>\n              {/* <td>{item.product_name}</td> */}\n              <td>{item.quantity_to_order}</td>\n              <td>{item.product_color}</td>\n              <td>{item.product_size}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      )}\n  </div>\n  );\n}\n\nexport default Prediction;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;;EAEA,MAAMa,yBAAyB,GAAIC,CAAC,IAAK;IACvCN,gBAAgB,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAGD,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrCP,mBAAmB,CAAC,EAAE,CAAC;IACvBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACFM,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEZ,aAAa,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}