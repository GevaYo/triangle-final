{"ast":null,"code":"var _jsxFileName = \"/Users/danatorgovitsky/Desktop/Project/Triangle/my-app/src/pages/SurveyLandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport '../css/SurveyLandingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyLandingPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [surveyQuestions, setSurveyQuestions] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  useEffect(() => {\n    if (id) {\n      fetchSurveyData(id);\n    }\n  }, [id]);\n  const fetchSurveyData = async id => {\n    try {\n      const response = await axios.get(`http://localhost:3001/survey/${id}`);\n      setSurveyQuestions(response.data.survey_questions);\n      initializeResponses(response.data.survey_questions);\n    } catch (error) {\n      console.error('Error fetching survey data:', error);\n    }\n  };\n  const initializeResponses = questions => {\n    const initialResponses = questions.map(question => ({\n      q_id: question.q_id,\n      answer_id: null\n    }));\n    setResponses(initialResponses);\n    setErrors(new Array(questions.length).fill(false));\n  };\n  const handleAnswerChange = (questionIndex, answerId) => {\n    const updatedResponses = [...responses];\n    updatedResponses[questionIndex].answer_id = answerId;\n    setResponses(updatedResponses);\n    const updatedErrors = [...errors];\n    updatedErrors[questionIndex] = false;\n    setErrors(updatedErrors);\n  };\n  const validateResponses = () => {\n    const validationErrors = responses.map(response => response.answer_id === null);\n    setErrors(validationErrors); // Update errors immediately\n    return !validationErrors.includes(true);\n  };\n  const submitSurvey = async () => {\n    const hasEmptyAnswers = responses.some(response => response.answer_id === null);\n    if (hasEmptyAnswers) {\n      const updatedErrors = responses.map(response => response.answer_id === null);\n      setErrors(updatedErrors);\n      alert('באחת או יותר מהשאלות חסרות תשובות. אנא בדוק אם כל השאלות מולאו כהלכה.');\n      return;\n    }\n    try {\n      const submittedResponses = responses.map(({\n        q_id,\n        answer_id\n      }) => ({\n        q_id,\n        a_id: answer_id\n      }));\n      await axios.post('http://localhost:3001/responses', {\n        survey_id: id,\n        responses: submittedResponses\n      });\n      setIsSubmitted(true);\n    } catch (error) {\n      console.error('הגשת הסקר נכשלה:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SurveyLandingPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u05E9\\u05D0\\u05DC\\u05D5\\u05DF:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u05EA\\u05D5\\u05D3\\u05D4 \\u05E2\\u05DC \\u05D4\\u05E9\\u05EA\\u05EA\\u05E4\\u05D5\\u05EA\\u05DA \\u05D1\\u05E1\\u05E7\\u05E8!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : surveyQuestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [surveyQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `question-containerSLP ${errors[index] ? 'error' : ''}`,\n          children: [question.questionText, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), errors[index] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: \"\\u05D4\\u05E9\\u05D0\\u05DC\\u05D4 \\u05D4\\u05D6\\u05D5 \\u05D4\\u05D9\\u05D0 \\u05D7\\u05D5\\u05D1\\u05D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }, this), question.answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-option\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"answer-option-input\",\n              type: \"radio\",\n              name: `question_${index}`,\n              value: answer.a_id,\n              onChange: () => handleAnswerChange(index, answer.a_id),\n              checked: responses[index].answer_id === answer.a_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), answer.answerText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)\n        }, answer.a_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this))]\n      }, question.q_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: submitSurvey,\n        children: \"\\u05D4\\u05D2\\u05E9 \\u05E1\\u05E7\\u05E8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyLandingPage, \"j1UtBblvrUvV+YeOcgQmPjDkJaE=\", false, function () {\n  return [useParams];\n});\n_c = SurveyLandingPage;\nexport default SurveyLandingPage;\nvar _c;\n$RefreshReg$(_c, \"SurveyLandingPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","SurveyLandingPage","_s","id","surveyQuestions","setSurveyQuestions","responses","setResponses","errors","setErrors","isSubmitted","setIsSubmitted","fetchSurveyData","response","get","data","survey_questions","initializeResponses","error","console","questions","initialResponses","map","question","q_id","answer_id","Array","length","fill","handleAnswerChange","questionIndex","answerId","updatedResponses","updatedErrors","validateResponses","validationErrors","includes","submitSurvey","hasEmptyAnswers","some","alert","submittedResponses","a_id","post","survey_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","questionText","answers","answer","type","name","value","onChange","checked","answerText","onClick","_c","$RefreshReg$"],"sources":["/Users/danatorgovitsky/Desktop/Project/Triangle/my-app/src/pages/SurveyLandingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../css/SurveyLandingPage.css';\r\n\r\nconst SurveyLandingPage = () => {\r\n  const { id } = useParams();\r\n  const [surveyQuestions, setSurveyQuestions] = useState([]);\r\n  const [responses, setResponses] = useState([]);\r\n  const [errors, setErrors] = useState([]);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      fetchSurveyData(id);\r\n    }\r\n  }, [id]);\r\n\r\n  const fetchSurveyData = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/survey/${id}`);\r\n      setSurveyQuestions(response.data.survey_questions);\r\n      initializeResponses(response.data.survey_questions);\r\n    } catch (error) {\r\n      console.error('Error fetching survey data:', error);\r\n    }\r\n  };\r\n\r\n  const initializeResponses = (questions) => {\r\n    const initialResponses = questions.map((question) => ({\r\n      q_id: question.q_id,\r\n      answer_id: null\r\n    }));\r\n    setResponses(initialResponses);\r\n    setErrors(new Array(questions.length).fill(false));\r\n  };\r\n\r\n  const handleAnswerChange = (questionIndex, answerId) => {\r\n    const updatedResponses = [...responses];\r\n    updatedResponses[questionIndex].answer_id = answerId;\r\n    setResponses(updatedResponses);\r\n\r\n    const updatedErrors = [...errors];\r\n    updatedErrors[questionIndex] = false;\r\n    setErrors(updatedErrors);\r\n  };\r\n\r\n  const validateResponses = () => {\r\n    const validationErrors = responses.map(response => response.answer_id === null);\r\n    setErrors(validationErrors); // Update errors immediately\r\n    return !validationErrors.includes(true);\r\n  };\r\n\r\n  const submitSurvey = async () => {\r\n    const hasEmptyAnswers = responses.some(response => response.answer_id === null);\r\n\r\n    if (hasEmptyAnswers) {\r\n      const updatedErrors = responses.map(response => response.answer_id === null);\r\n      setErrors(updatedErrors);\r\n      alert('באחת או יותר מהשאלות חסרות תשובות. אנא בדוק אם כל השאלות מולאו כהלכה.');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const submittedResponses = responses.map(({ q_id, answer_id }) => ({\r\n        q_id,\r\n        a_id: answer_id,\r\n      }));\r\n\r\n      await axios.post('http://localhost:3001/responses', {\r\n        survey_id: id,\r\n        responses: submittedResponses,\r\n      });\r\n      setIsSubmitted(true);\r\n    } catch (error) {\r\n      console.error('הגשת הסקר נכשלה:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SurveyLandingPage\">\r\n      <h1>שאלון:</h1>\r\n      {isSubmitted ? (\r\n        <p>תודה על השתתפותך בסקר!</p>\r\n\r\n      ) : surveyQuestions.length > 0 ? (\r\n        <form>\r\n          {surveyQuestions.map((question, index) => (\r\n            <div key={question.q_id}>\r\n              <h2 className={`question-containerSLP ${errors[index] ? 'error' : ''}`}>\r\n                {question.questionText} <span className=\"required-asterisk\">*</span>\r\n              </h2>\r\n              {errors[index] && <span className=\"error-message\">השאלה הזו היא חובה</span>}\r\n              {question.answers.map((answer) => (\r\n                <div key={answer.a_id} className='answer-option'>\r\n                  <label>\r\n                    <input className='answer-option-input'\r\n                      type=\"radio\"\r\n                      name={`question_${index}`}\r\n                      value={answer.a_id}\r\n                      onChange={() => handleAnswerChange(index, answer.a_id)}\r\n                      checked={responses[index].answer_id === answer.a_id}\r\n                    />\r\n                    {answer.answerText}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n          <button type=\"button\" onClick={submitSurvey}>הגש סקר</button>\r\n        </form>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyLandingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}