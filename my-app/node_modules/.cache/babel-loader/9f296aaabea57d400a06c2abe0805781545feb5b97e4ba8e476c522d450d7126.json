{"ast":null,"code":"var _jsxFileName = \"/Users/danatorgovitsky/Desktop/Project/Triangle/my-app/src/pages/EventCalendarPage/EventCalendarPage.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { Calendar, momentLocalizer } from 'react-big-calendar';\n// // import moment from 'moment';\n// // import 'react-big-calendar/lib/css/react-big-calendar.css';\n// // import './EventCalendarPage.css';\n// // import { generateEvents } from '../../APIfiles/generateEvents.js';\n// // import EventGenerationModal from '../../APIfiles/EventGenerationModal.js';\n\n// // const localizer = momentLocalizer(moment);\n\n// // const EventCalendarPage = () => {\n// //   const navigate = useNavigate();\n// //   const [events, setEvents] = useState([]);\n// //   const [generatedEvents, setGeneratedEvents] = useState([]);\n// //   const [isModalOpen, setIsModalOpen] = useState(false);\n\n// //   const handleBackClick = () => {\n// //     navigate('/club-management');\n// //   };\n\n// //   const handleCreateEvents = async (input) => {\n// //     const aiEvents = await generateEvents(input);\n// //     setGeneratedEvents(aiEvents);\n// //   };\n\n// //   const handleAddEvents = () => {\n// //     const selectedEvents = generatedEvents.filter(event => event.selected);\n// //     setEvents((prevEvents) => [...prevEvents, ...selectedEvents]);\n// //     setGeneratedEvents([]);\n// //     setIsModalOpen(false);\n// //   };\n\n// //   return (\n// //     <div className=\"event-calendar-container\">\n// //       <div className=\"back-button\" onClick={handleBackClick}>\n// //         &lt; Back\n// //       </div>\n// //       <h1 className=\"title\">ניהול יומן אירועים</h1>\n// //       <div className=\"event-list\">\n// //         <h2>יומן אירועים</h2>\n// //         <div className=\"calendar-container\">\n// //           <Calendar\n// //             localizer={localizer}\n// //             events={events}\n// //             startAccessor=\"start\"\n// //             endAccessor=\"end\"\n// //             titleAccessor=\"title\"\n// //             className=\"rbc-calendar\"\n// //             onSelectEvent={(event) => {\n// //               alert(`Event: ${event.title}\\nDescription: ${event.description}`);\n// //             }}\n// //             selectable\n// //           />\n// //         </div>\n// //       </div>\n// //       {generatedEvents.length > 0 && (\n// //         <div>\n// //           <h2>Generated Events</h2>\n// //           <ul>\n// //             {generatedEvents.map((event, index) => (\n// //               <li key={index}>\n// //                 <input type=\"checkbox\" checked={event.selected || false} onChange={() => {\n// //                   const updatedEvents = [...generatedEvents];\n// //                   updatedEvents[index].selected = !updatedEvents[index].selected;\n// //                   setGeneratedEvents(updatedEvents);\n// //                 }} />\n// //                 <input type=\"date\" value={moment(event.start.dateTime).format('YYYY-MM-DD')} onChange={(e) => {\n// //                   const updatedEvents = [...generatedEvents];\n// //                   const newDate = moment(e.target.value, 'YYYY-MM-DD').toISOString();\n// //                   updatedEvents[index].start.dateTime = newDate;\n// //                   updatedEvents[index].end.dateTime = moment(newDate).add(1, 'hour').toISOString();\n// //                   setGeneratedEvents(updatedEvents);\n// //                 }} />\n// //                 <input type=\"text\" value={event.title} onChange={(e) => {\n// //                   const updatedEvents = [...generatedEvents];\n// //                   updatedEvents[index].title = e.target.value;\n// //                   setGeneratedEvents(updatedEvents);\n// //                 }} />\n// //                 <input type=\"text\" value={event.description} onChange={(e) => {\n// //                   const updatedEvents = [...generatedEvents];\n// //                   updatedEvents[index].description = e.target.value;\n// //                   setGeneratedEvents(updatedEvents);\n// //                 }} />\n// //               </li>\n// //             ))}\n// //           </ul>\n// //           <button onClick={handleAddEvents}>Add Selected Events</button>\n// //         </div>\n// //       )}\n// //       <button className=\"create-events-button\" onClick={() => setIsModalOpen(true)}>Create Events</button>\n// //       <EventGenerationModal\n// //         isOpen={isModalOpen}\n// //         onClose={() => setIsModalOpen(false)}\n// //         onGenerate={handleCreateEvents}\n// //       />\n// //     </div>\n// //   );\n// // };\n\n// // export default EventCalendarPage;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// import './EventCalendarPage.css';\n// import { generateEvents } from '../../APIfiles/generateEvents.js';\n// import EventGenerationModal from '../../APIfiles/EventGenerationModal.js';\n\n// const localizer = momentLocalizer(moment);\n\n// const EventCalendarPage = () => {\n//   const navigate = useNavigate();\n//   const [events, setEvents] = useState([]);\n//   const [generatedEvents, setGeneratedEvents] = useState([]);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const handleBackClick = () => {\n//     navigate('/club-management');\n//   };\n\n//   const handleCreateEvents = async (input) => {\n//     const aiEvents = await generateEvents(input);\n//     setGeneratedEvents(aiEvents);\n//   };\n\n//   const handleAddEvents = () => {\n//     const selectedEvents = generatedEvents.filter(event => event.selected);\n//     setEvents((prevEvents) => [...prevEvents, ...selectedEvents]);\n//     setGeneratedEvents([]);\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <div className=\"event-calendar-container\">\n//       <div className=\"back-button\" onClick={handleBackClick}>\n//         Back\n//       </div>\n//       <h2>ניהול יומן אירועים</h2>\n//       <div className=\"event-list\">\n//         <h3>יומן אירועים</h3>\n//         <div className=\"calendar-container\">\n//           <Calendar\n//             localizer={localizer}\n//             events={events}\n//             startAccessor=\"start\"\n//             endAccessor=\"end\"\n//             titleAccessor=\"title\"\n//             className=\"rbc-calendar\"\n//             onSelectEvent={(event) => {\n//               alert(`Event: ${event.title}\\nDescription: ${event.description}`);\n//             }}\n//             selectable\n//           />\n//         </div>\n//       </div>\n//       {generatedEvents.length > 0 && (\n//         <div className=\"generated-events-container\">\n//           <h2>Generated Events</h2>\n//           <ul className=\"generated-events-list\">\n//             {generatedEvents.map((event, index) => (\n//               <li key={index} className=\"generated-event-item\">\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={event.selected || false}\n//                   onChange={() => {\n//                     const updatedEvents = [...generatedEvents];\n//                     updatedEvents[index].selected = !updatedEvents[index].selected;\n//                     setGeneratedEvents(updatedEvents);\n//                   }}\n//                 />\n//                 <input\n//                   type=\"date\"\n//                   value={moment(event.start.dateTime).format('YYYY-MM-DD')}\n//                   onChange={(e) => {\n//                     const updatedEvents = [...generatedEvents];\n//                     const newDate = moment(e.target.value, 'YYYY-MM-DD').toISOString();\n//                     updatedEvents[index].start.dateTime = newDate;\n//                     updatedEvents[index].end.dateTime = moment(newDate).add(1, 'hour').toISOString();\n//                     setGeneratedEvents(updatedEvents);\n//                   }}\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   value={event.title}\n//                   onChange={(e) => {\n//                     const updatedEvents = [...generatedEvents];\n//                     updatedEvents[index].title = e.target.value;\n//                     setGeneratedEvents(updatedEvents);\n//                   }}\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   value={event.description}\n//                   onChange={(e) => {\n//                     const updatedEvents = [...generatedEvents];\n//                     updatedEvents[index].description = e.target.value;\n//                     setGeneratedEvents(updatedEvents);\n//                   }}\n//                 />\n//               </li>\n//             ))}\n//           </ul>\n//           <button className=\"add-events-button\" onClick={handleAddEvents}>Add Selected Events</button>\n//         </div>\n//       )}\n//       <button className=\"create-events-button\" onClick={() => setIsModalOpen(true)}>Create Events</button>\n//       <EventGenerationModal\n//         isOpen={isModalOpen}\n//         onClose={() => setIsModalOpen(false)}\n//         onGenerate={handleCreateEvents}\n//       />\n//     </div>\n//   );\n// };\n\n// export default EventCalendarPage;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './EventCalendarPage.css';\nimport { generateEvents } from '../../APIfiles/generateEvents.js';\nimport EventGenerationModal from '../../APIfiles/EventGenerationModal.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst EventCalendarPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [events, setEvents] = useState([]);\n  const [generatedEvents, setGeneratedEvents] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleBackClick = () => {\n    navigate('/club-management');\n  };\n  const handleCreateEvents = async input => {\n    const aiEvents = await generateEvents(input);\n    setGeneratedEvents(aiEvents);\n  };\n  const handleAddEvents = () => {\n    const selectedEvents = generatedEvents.filter(event => event.selected);\n    setEvents(prevEvents => [...prevEvents, ...selectedEvents]);\n    setGeneratedEvents([]);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-button\",\n      onClick: handleBackClick,\n      children: \"< Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\u05E0\\u05D9\\u05D4\\u05D5\\u05DC \\u05D9\\u05D5\\u05DE\\u05DF \\u05D0\\u05D9\\u05E8\\u05D5\\u05E2\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"your-class-name\",\n      onClick: () => setIsModalOpen(true),\n      children: \"Create Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventGenerationModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onGenerate: handleCreateEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), generatedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: generatedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: event.selected || false,\n            onChange: () => {\n              const updatedEvents = [...generatedEvents];\n              updatedEvents[index].selected = !updatedEvents[index].selected;\n              setGeneratedEvents(updatedEvents);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: moment(event.start).format('YYYY-MM-DD'),\n            onChange: e => {\n              const updatedEvents = [...generatedEvents];\n              const newDate = moment(e.target.value, 'YYYY-MM-DD').toISOString();\n              updatedEvents[index].start = newDate;\n              updatedEvents[index].end = moment(newDate).add(1, 'hour').toISOString();\n              setGeneratedEvents(updatedEvents);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: event.title,\n            onChange: e => {\n              const updatedEvents = [...generatedEvents];\n              updatedEvents[index].title = e.target.value;\n              setGeneratedEvents(updatedEvents);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: event.description,\n            onChange: e => {\n              const updatedEvents = [...generatedEvents];\n              updatedEvents[index].description = e.target.value;\n              setGeneratedEvents(updatedEvents);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddEvents,\n        children: \"Add Selected Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u05D9\\u05D5\\u05DE\\u05DF \\u05D0\\u05D9\\u05E8\\u05D5\\u05E2\\u05D9\\u05DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          localizer: localizer,\n          events: events,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          titleAccessor: \"title\",\n          className: \"rbc-calendar\",\n          onSelectEvent: event => {\n            alert(`Event: ${event.title}\\nDescription: ${event.description}`);\n          },\n          selectable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(EventCalendarPage, \"mkH+hgmRug+UHwbpPIGzeWeE8y4=\", false, function () {\n  return [useNavigate];\n});\n_c = EventCalendarPage;\nexport default EventCalendarPage;\nvar _c;\n$RefreshReg$(_c, \"EventCalendarPage\");","map":{"version":3,"names":["React","useState","useNavigate","Calendar","momentLocalizer","moment","generateEvents","EventGenerationModal","jsxDEV","_jsxDEV","localizer","EventCalendarPage","_s","navigate","events","setEvents","generatedEvents","setGeneratedEvents","isModalOpen","setIsModalOpen","handleBackClick","handleCreateEvents","input","aiEvents","handleAddEvents","selectedEvents","filter","event","selected","prevEvents","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","onGenerate","length","map","index","type","checked","onChange","updatedEvents","value","start","format","e","newDate","target","toISOString","end","add","title","description","startAccessor","endAccessor","titleAccessor","onSelectEvent","alert","selectable","_c","$RefreshReg$"],"sources":["/Users/danatorgovitsky/Desktop/Project/Triangle/my-app/src/pages/EventCalendarPage/EventCalendarPage.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// // import { Calendar, momentLocalizer } from 'react-big-calendar';\n// // import moment from 'moment';\n// // import 'react-big-calendar/lib/css/react-big-calendar.css';\n// // import './EventCalendarPage.css';\n// // import { generateEvents } from '../../APIfiles/generateEvents.js';\n// // import EventGenerationModal from '../../APIfiles/EventGenerationModal.js';\n\n// // const localizer = momentLocalizer(moment);\n\n// // const EventCalendarPage = () => {\n// //   const navigate = useNavigate();\n// //   const [events, setEvents] = useState([]);\n// //   const [generatedEvents, setGeneratedEvents] = useState([]);\n// //   const [isModalOpen, setIsModalOpen] = useState(false);\n\n// //   const handleBackClick = () => {\n// //     navigate('/club-management');\n// //   };\n\n// //   const handleCreateEvents = async (input) => {\n// //     const aiEvents = await generateEvents(input);\n// //     setGeneratedEvents(aiEvents);\n// //   };\n\n// //   const handleAddEvents = () => {\n// //     const selectedEvents = generatedEvents.filter(event => event.selected);\n// //     setEvents((prevEvents) => [...prevEvents, ...selectedEvents]);\n// //     setGeneratedEvents([]);\n// //     setIsModalOpen(false);\n// //   };\n\n// //   return (\n// //     <div className=\"event-calendar-container\">\n// //       <div className=\"back-button\" onClick={handleBackClick}>\n// //         &lt; Back\n// //       </div>\n// //       <h1 className=\"title\">ניהול יומן אירועים</h1>\n// //       <div className=\"event-list\">\n// //         <h2>יומן אירועים</h2>\n// //         <div className=\"calendar-container\">\n// //           <Calendar\n// //             localizer={localizer}\n// //             events={events}\n// //             startAccessor=\"start\"\n// //             endAccessor=\"end\"\n// //             titleAccessor=\"title\"\n// //             className=\"rbc-calendar\"\n// //             onSelectEvent={(event) => {\n// //               alert(`Event: ${event.title}\\nDescription: ${event.description}`);\n// //             }}\n// //             selectable\n// //           />\n// //         </div>\n// //       </div>\n// //       {generatedEvents.length > 0 && (\n// //         <div>\n// //           <h2>Generated Events</h2>\n// //           <ul>\n// //             {generatedEvents.map((event, index) => (\n// //               <li key={index}>\n// //                 <input type=\"checkbox\" checked={event.selected || false} onChange={() => {\n// //                   const updatedEvents = [...generatedEvents];\n// //                   updatedEvents[index].selected = !updatedEvents[index].selected;\n// //                   setGeneratedEvents(updatedEvents);\n// //                 }} />\n// //                 <input type=\"date\" value={moment(event.start.dateTime).format('YYYY-MM-DD')} onChange={(e) => {\n// //                   const updatedEvents = [...generatedEvents];\n// //                   const newDate = moment(e.target.value, 'YYYY-MM-DD').toISOString();\n// //                   updatedEvents[index].start.dateTime = newDate;\n// //                   updatedEvents[index].end.dateTime = moment(newDate).add(1, 'hour').toISOString();\n// //                   setGeneratedEvents(updatedEvents);\n// //                 }} />\n// //                 <input type=\"text\" value={event.title} onChange={(e) => {\n// //                   const updatedEvents = [...generatedEvents];\n// //                   updatedEvents[index].title = e.target.value;\n// //                   setGeneratedEvents(updatedEvents);\n// //                 }} />\n// //                 <input type=\"text\" value={event.description} onChange={(e) => {\n// //                   const updatedEvents = [...generatedEvents];\n// //                   updatedEvents[index].description = e.target.value;\n// //                   setGeneratedEvents(updatedEvents);\n// //                 }} />\n// //               </li>\n// //             ))}\n// //           </ul>\n// //           <button onClick={handleAddEvents}>Add Selected Events</button>\n// //         </div>\n// //       )}\n// //       <button className=\"create-events-button\" onClick={() => setIsModalOpen(true)}>Create Events</button>\n// //       <EventGenerationModal\n// //         isOpen={isModalOpen}\n// //         onClose={() => setIsModalOpen(false)}\n// //         onGenerate={handleCreateEvents}\n// //       />\n// //     </div>\n// //   );\n// // };\n\n// // export default EventCalendarPage;\n\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// import './EventCalendarPage.css';\n// import { generateEvents } from '../../APIfiles/generateEvents.js';\n// import EventGenerationModal from '../../APIfiles/EventGenerationModal.js';\n\n// const localizer = momentLocalizer(moment);\n\n// const EventCalendarPage = () => {\n//   const navigate = useNavigate();\n//   const [events, setEvents] = useState([]);\n//   const [generatedEvents, setGeneratedEvents] = useState([]);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const handleBackClick = () => {\n//     navigate('/club-management');\n//   };\n\n//   const handleCreateEvents = async (input) => {\n//     const aiEvents = await generateEvents(input);\n//     setGeneratedEvents(aiEvents);\n//   };\n\n//   const handleAddEvents = () => {\n//     const selectedEvents = generatedEvents.filter(event => event.selected);\n//     setEvents((prevEvents) => [...prevEvents, ...selectedEvents]);\n//     setGeneratedEvents([]);\n//     setIsModalOpen(false);\n//   };\n\n//   return (\n//     <div className=\"event-calendar-container\">\n//       <div className=\"back-button\" onClick={handleBackClick}>\n//         Back\n//       </div>\n//       <h2>ניהול יומן אירועים</h2>\n//       <div className=\"event-list\">\n//         <h3>יומן אירועים</h3>\n//         <div className=\"calendar-container\">\n//           <Calendar\n//             localizer={localizer}\n//             events={events}\n//             startAccessor=\"start\"\n//             endAccessor=\"end\"\n//             titleAccessor=\"title\"\n//             className=\"rbc-calendar\"\n//             onSelectEvent={(event) => {\n//               alert(`Event: ${event.title}\\nDescription: ${event.description}`);\n//             }}\n//             selectable\n//           />\n//         </div>\n//       </div>\n//       {generatedEvents.length > 0 && (\n//         <div className=\"generated-events-container\">\n//           <h2>Generated Events</h2>\n//           <ul className=\"generated-events-list\">\n//             {generatedEvents.map((event, index) => (\n//               <li key={index} className=\"generated-event-item\">\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={event.selected || false}\n//                   onChange={() => {\n//                     const updatedEvents = [...generatedEvents];\n//                     updatedEvents[index].selected = !updatedEvents[index].selected;\n//                     setGeneratedEvents(updatedEvents);\n//                   }}\n//                 />\n//                 <input\n//                   type=\"date\"\n//                   value={moment(event.start.dateTime).format('YYYY-MM-DD')}\n//                   onChange={(e) => {\n//                     const updatedEvents = [...generatedEvents];\n//                     const newDate = moment(e.target.value, 'YYYY-MM-DD').toISOString();\n//                     updatedEvents[index].start.dateTime = newDate;\n//                     updatedEvents[index].end.dateTime = moment(newDate).add(1, 'hour').toISOString();\n//                     setGeneratedEvents(updatedEvents);\n//                   }}\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   value={event.title}\n//                   onChange={(e) => {\n//                     const updatedEvents = [...generatedEvents];\n//                     updatedEvents[index].title = e.target.value;\n//                     setGeneratedEvents(updatedEvents);\n//                   }}\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   value={event.description}\n//                   onChange={(e) => {\n//                     const updatedEvents = [...generatedEvents];\n//                     updatedEvents[index].description = e.target.value;\n//                     setGeneratedEvents(updatedEvents);\n//                   }}\n//                 />\n//               </li>\n//             ))}\n//           </ul>\n//           <button className=\"add-events-button\" onClick={handleAddEvents}>Add Selected Events</button>\n//         </div>\n//       )}\n//       <button className=\"create-events-button\" onClick={() => setIsModalOpen(true)}>Create Events</button>\n//       <EventGenerationModal\n//         isOpen={isModalOpen}\n//         onClose={() => setIsModalOpen(false)}\n//         onGenerate={handleCreateEvents}\n//       />\n//     </div>\n//   );\n// };\n\n// export default EventCalendarPage;\n\n\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './EventCalendarPage.css';\nimport { generateEvents } from '../../APIfiles/generateEvents.js';\nimport EventGenerationModal from '../../APIfiles/EventGenerationModal.js';\n\nconst localizer = momentLocalizer(moment);\n\nconst EventCalendarPage = () => {\n  const navigate = useNavigate();\n  const [events, setEvents] = useState([]);\n  const [generatedEvents, setGeneratedEvents] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleBackClick = () => {\n    navigate('/club-management');\n  };\n\n  const handleCreateEvents = async (input) => {\n    const aiEvents = await generateEvents(input);\n    setGeneratedEvents(aiEvents);\n  };\n\n  const handleAddEvents = () => {\n    const selectedEvents = generatedEvents.filter(event => event.selected);\n    setEvents((prevEvents) => [...prevEvents, ...selectedEvents]);\n    setGeneratedEvents([]);\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"event-calendar-container\">\n      <div className=\"back-button\" onClick={handleBackClick}>\n        &lt; Back\n      </div>\n      <h1 className=\"title\">ניהול יומן אירועים</h1>\n      {/* <button onClick={() => setIsModalOpen(true)}>Create Events</button> */}\n      <button className=\"your-class-name\" onClick={() => setIsModalOpen(true)}>Create Events</button>\n      <EventGenerationModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onGenerate={handleCreateEvents}\n      />\n      {generatedEvents.length > 0 && (\n        <div>\n          <h2>Generated Events</h2>\n          <ul>\n            {generatedEvents.map((event, index) => (\n              <li key={index}>\n                <input type=\"checkbox\" checked={event.selected || false} onChange={() => {\n                  const updatedEvents = [...generatedEvents];\n                  updatedEvents[index].selected = !updatedEvents[index].selected;\n                  setGeneratedEvents(updatedEvents);\n                }} />\n                <input\n                  type=\"date\"\n                  value={moment(event.start).format('YYYY-MM-DD')}\n                  onChange={(e) => {\n                    const updatedEvents = [...generatedEvents];\n                    const newDate = moment(e.target.value, 'YYYY-MM-DD').toISOString();\n                    updatedEvents[index].start = newDate;\n                    updatedEvents[index].end = moment(newDate).add(1, 'hour').toISOString();\n                    setGeneratedEvents(updatedEvents);\n                  }}\n                />\n                <input\n                  type=\"text\"\n                  value={event.title}\n                  onChange={(e) => {\n                    const updatedEvents = [...generatedEvents];\n                    updatedEvents[index].title = e.target.value;\n                    setGeneratedEvents(updatedEvents);\n                  }}\n                />\n                <input\n                  type=\"text\"\n                  value={event.description}\n                  onChange={(e) => {\n                    const updatedEvents = [...generatedEvents];\n                    updatedEvents[index].description = e.target.value;\n                    setGeneratedEvents(updatedEvents);\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n          <button onClick={handleAddEvents}>Add Selected Events</button>\n        </div>\n      )}\n      <div className=\"event-list\">\n        <h2>יומן אירועים</h2>\n        <div className=\"calendar-container\">\n          <Calendar\n            localizer={localizer}\n            events={events}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            titleAccessor=\"title\"\n            className=\"rbc-calendar\"\n            onSelectEvent={(event) => {\n              alert(`Event: ${event.title}\\nDescription: ${event.description}`);\n            }}\n            selectable\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventCalendarPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAC1D,OAAO,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}